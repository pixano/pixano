name: Build test and push latest Docker image

on:
  push:
    branches:
      - main

env:
  TEST_TAG: pixano/pixano:test
  LATEST_TAG: pixano/pixano:latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push test
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Test
        run: |
          mkdir -p library
          mkdir -p library/fake_dataset
          touch library/fake_dataset/info.json
          echo '{"id": "fake_dataset", "name": "Fake Dataset", "description": "A fake dataset for testing purposes"}' > library/fake_dataset/info.json
          docker run -p 8000:8000 --name pixano -d -v /home/data ${{ env.TEST_TAG }}
          sleep 5
          EXCPECTED_RESPONSE='[{\"id\":\"fake_dataset\",\"name\":\"Fake Dataset\",\"description\":\"A fake dataset for testing purposes\"}]'
          RESPONSE=$(curl http://localhost:8000)
          if [ "$RESPONSE" == "$EXPECTED_RESPONSE" ]; then
              echo "Test Passed: Service returned expected response."
              echo "Expected: $EXPECTED_RESPONSE"
              echo "Actual: $RESPONSE"
              docker kill pixano
              docker rm pixano
              exit 0
          else
              echo "Test Failed: Service response did not match expected response."
              echo "Expected: $EXPECTED_RESPONSE"
              echo "Actual: $RESPONSE"
              docker kill pixano
              docker rm pixano
              exit 1
          fi

      - name: Build and push latest
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}
