# =====================================
# Copyright: CEA-LIST/DIASI/SIALV/LVA
# Author : pixano@cea.fr
# License: CECILL-C
# =====================================

name: Publish

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  deploy_pypi:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup pnpm 9
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch

      - name: Build app
        run: |
          cd ui
          pnpm i --frozen-lockfile
          cd apps/pixano
          pnpm build
          cd ../../..

      - name: Build package
        run: hatch build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy_docs:
    name: Publish documentation website
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure git credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Create cache_id for key creation
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - name: Create cache key with cache_id
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install dependencies
        run: pip install .[documentation]

      - name: Publish documentation website
        run: mkdocs gh-deploy --force

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: VERSION=$(cat VERSION)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            pixano/pixano:${VERSION}
            ${{ github.event.release.prerelease == false && 'pixano/pixano:stable' || '' }}
